
# feature demonstration

events:
  event_name: # event name, needs to be the same as in api
    intensity: 50 # [0-100]
    duration: 5 # seconds, decimal values with 1 decimal place are allowed
  # setting intensity to 0 will stop vibrations 
  # setting duration to 0 will make the vibration last forever (5 minutes) or until an event with 0 intensity is sent, useful for games that you need to be revived
  
  event_name2:
    intensity: 80
    duration: 5
    condition: "value == true" # optional, this expression need to return a boolean
    # every expressions need to be written in C# syntax 
    
    modifier: [ # optional
      {
        condition: "value == 'A' || value == 'B'", # you can use boolean algebra
        
        intensity: "intensity + 10", # affects intensity, this expression should return an int
        intensity_min: 0, # [0-100] (0 is default). optional, set a minimum to the expression's result
        intensity_max: 100, # [0-100] (100 is default). optional, set a maximum to the expression's result
        
        duration: "duration * 2.5", # affects duration, this expression should return an int or double
        duration_min: 0, # [0-300] (0.1 is default). optional, set a minimum to the expression's result
        duration_max: 300, # [0-300] (300 is default). optional, set a maximum to the expression's result
        
        break: true, # [true, false] optional only checked if condition exist
        # every modifier will be added together until one is break
      },
      # repeat to add more modifiers
      # each modifier will be done in order (top to bottom)
      # the way you write your expressions is important, as well as which option you enable
      {
        condition: "[value.count] > 0", # you can read multiple keys, but you have to add brackets around your value (check in the specific game api)
        intensity: "[value.count] * [value.strength]", # this expression need to return an int or double
      },
      {
        condition: true, # you can directly input true/false, useful for testing
        duration: 10, # you can set the expression to a constant
      },
    ]